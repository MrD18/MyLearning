package com.yss.other.分布式锁.单机模式ZK;

/**客户端: 创建50个线程去访问获取订单号的时候
 * @author: duhao
 * @date: 2020/7/29 13:38
 */
public class Client {
    public static void main(String[] args) {
        OrderService orderService = new OrderService();
for(int i=1;i<=50;i++){
       new Thread(()->{
           String str = orderService.getOrderNumber();
           System.out.println(str);
       },String.valueOf(i)).start();
}

    }
}
/**多次运行后,发现订单1 出现了2次
 *  生成订单号：2
 * 	 生成订单号：5
 * 	 生成订单号：4
 * 	 生成订单号：1
 * 	 生成订单号：1
 * 	 生成订单号：3
 * 	 生成订单号：6
 * 	 生成订单号：7
 * 	 生成订单号：10
 * 	 生成订单号：9
 * 	 生成订单号：8
 * 	 生成订单号：12
 * 	 生成订单号：13
 * 	 生成订单号：11
 * 	 生成订单号：14
 * 	 生成订单号：15
 * 	 生成订单号：16
 * 	 生成订单号：17
 * 	 生成订单号：18
 * 	 生成订单号：19
 * 	 生成订单号：20
 * 	 生成订单号：21
 * 	 生成订单号：22
 * 	 生成订单号：24
 * 	 生成订单号：23
 * 	 生成订单号：25
 * 	 生成订单号：26
 * 	 生成订单号：28
 * 	 生成订单号：27
 * 	 生成订单号：29
 * 	 生成订单号：30
 * 	 生成订单号：31
 * 	 生成订单号：32
 * 	 生成订单号：33
 * 	 生成订单号：34
 * 	 生成订单号：35
 * 	 生成订单号：36
 * 	 生成订单号：37
 * 	 生成订单号：38
 * 	 生成订单号：39
 * 	 生成订单号：40
 * 	 生成订单号：41
 * 	 生成订单号：42
 * 	 生成订单号：43
 * 	 生成订单号：44
 * 	 生成订单号：49
 * 	 生成订单号：48
 * 	 生成订单号：47
 * 	 生成订单号：45
 * 	 生成订单号：46
 *
 */